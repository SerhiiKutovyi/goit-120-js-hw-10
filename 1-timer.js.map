{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\r\nimport iziToast from 'izitoast';\r\n\r\nimport 'flatpickr/dist/flatpickr.min.css';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nconst refs = {\r\n  input: document.querySelector('#datetime-picker'),\r\n  start: document.querySelector('[data-start]'),\r\n  days: document.querySelector('[data-days]'),\r\n  hours: document.querySelector('[data-hours]'),\r\n  minutes: document.querySelector('[data-minutes]'),\r\n  seconds: document.querySelector('[data-seconds]'),\r\n};\r\n\r\nlet userSelectedDate = null;\r\n\r\nrefs.input.disabled = false;\r\nrefs.start.disabled = false;\r\n\r\nconst options = {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    if (selectedDates[0] <= new Date()) {\r\n      iziToast.show({\r\n        title: 'Error',\r\n        titleColor: 'rgb(255, 255, 255)',\r\n        message: 'Please choose a date in the future',\r\n        messageColor: 'rgb(255, 255, 255)',\r\n        position: 'topRight',\r\n        color: 'rgb(239, 64, 64)',\r\n      });\r\n\r\n      return;\r\n    }\r\n    userSelectedDate = selectedDates[0];\r\n  },\r\n};\r\n\r\nflatpickr(refs.input, options);\r\n\r\nrefs.start.addEventListener('click', () => {\r\n  refs.start.disabled = true;\r\n  refs.input.disabled = true;\r\n\r\n  const timerId = setInterval(() => {\r\n    const userTime = userSelectedDate - Date.now();\r\n    const value = convertMs(userTime);\r\n\r\n    if (userTime <= 0) {\r\n      clearInterval(timerId);\r\n      refs.input.disabled = false;\r\n      refs.start.disabled = false;\r\n\r\n      return;\r\n    }\r\n\r\n    refs.days.textContent = value.days;\r\n    refs.hours.textContent = value.hours;\r\n    refs.minutes.textContent = value.minutes;\r\n    refs.seconds.textContent = value.seconds;\r\n  }, 1000);\r\n});\r\n\r\nconst addLeadingZero = value => String(value).padStart(2, '0');\r\n\r\nconst convertMs = ms => {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = addLeadingZero(Math.floor(ms / day));\r\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\r\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\r\n  const seconds = addLeadingZero(\r\n    Math.floor((((ms % day) % hour) % minute) / second)\r\n  );\r\n\r\n  return { days, hours, minutes, seconds };\r\n};\r\n"],"names":["refs","userSelectedDate","options","selectedDates","iziToast","flatpickr","timerId","userTime","value","convertMs","addLeadingZero","ms","days","hours","minutes","seconds"],"mappings":"0xBAMA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,MAAO,SAAS,cAAc,cAAc,EAC5C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KAEvBD,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAEtB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,IAAI,KAAQ,CAClCC,EAAS,KAAK,CACZ,MAAO,QACP,WAAY,qBACZ,QAAS,qCACT,aAAc,qBACd,SAAU,WACV,MAAO,kBACf,CAAO,EAED,MACF,CACAH,EAAmBE,EAAc,CAAC,CACpC,CACF,EAEAE,EAAUL,EAAK,MAAOE,CAAO,EAE7BF,EAAK,MAAM,iBAAiB,QAAS,IAAM,CACzCA,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAEtB,MAAMM,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAWN,EAAmB,KAAK,IAAG,EACtCO,EAAQC,EAAUF,CAAQ,EAEhC,GAAIA,GAAY,EAAG,CACjB,cAAcD,CAAO,EACrBN,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAEtB,MACF,CAEAA,EAAK,KAAK,YAAcQ,EAAM,KAC9BR,EAAK,MAAM,YAAcQ,EAAM,MAC/BR,EAAK,QAAQ,YAAcQ,EAAM,QACjCR,EAAK,QAAQ,YAAcQ,EAAM,OACnC,EAAG,GAAI,CACT,CAAC,EAED,MAAME,EAAiBF,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEvDC,EAAYE,GAAM,CAMtB,MAAMC,EAAOF,EAAe,KAAK,MAAMC,EAAK,KAAG,CAAC,EAC1CE,EAAQH,EAAe,KAAK,MAAOC,EAAK,MAAO,IAAI,CAAC,EACpDG,EAAUJ,EAAe,KAAK,MAAQC,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEI,EAAUL,EACd,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}